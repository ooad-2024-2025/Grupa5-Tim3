@model IEnumerable<Grupa5Tim3.Models.Umjetnina>

@{
    ViewData["Title"] = "Dostupne umjetnine";
    var aukcije = ViewBag.Aukcije as Dictionary<int, Grupa5Tim3.Models.Aukcija>;
}

@if (User.IsInRole("Administrator"))
{
    <div class="text-end mb-3">
    <a asp-action="Create" class="btn" style="background-color: #D8BFD8; color: black;">Add post</a>
</div>
}

<div class="filters-div">
    <button class="custom-bid-btn" onclick="openSidebar()">Filters</button>
</div>

<!-- Sliding Sidebar -->
<div id="filterSidebar" class="sidebar">
    
    <a href="javascript:void(0)" class="closebtn" onclick="closeSidebar()">&times;</a>
    <h4 style="color:black; padding:10px;">Filters</h4>
    <!-- Add filter controls here -->
    <div style="padding: 10px; color:black;margin-left:20px;">
       <form method="get" asp-controller="Umjetnina" asp-action="Index" id="filterForm">
    <h5 style="margin-top:20px;">Authors</h5>
    @foreach (var autor in (List<string>)ViewBag.Autori)
    {
        <div>
            <input type="checkbox" name="autori" value="@autor"
                   @(ViewBag.SelectedAutori.Contains(autor) ? "checked" : "") /> @autor
        </div>
    }

    <h5  style="margin-top:20px;">Techniques</h5>
    @foreach (var tehnika in (List<string>)ViewBag.Tehnike)
    {
        <div>
            <input type="checkbox" name="tehnike" value="@tehnika"
                   @(ViewBag.SelectedTehnike.Contains(tehnika) ? "checked" : "") /> @tehnika
        </div>
    }

    <h5  style="margin-top:20px;">Periods</h5>
    @foreach (var period in (List<string>)ViewBag.Periodi)
    {
        <div>
            <input type="checkbox" name="periodi" value="@period"
                   @(ViewBag.SelectedPeriodi.Contains(period) ? "checked" : "") /> @period
        </div>
    }
    <br />
    <br />
    <button class="btn btn-light btn-sm" onclick="applyFilter()">Primijeni</button>

</form>
    </div>
</div>
<div id="overlay" class="overlay" onclick="closeSidebar()"></div>

<div class="row">
    @foreach (var item in Model)
    {
        <div class="col-md-4 mb-4">
            <div class="card h-100 shadow-sm"
     data-autor="@item.autor?.ToLowerInvariant()"
     data-cijena="@((aukcije != null && aukcije.ContainsKey(item.umjetinaID)) ? aukcije[item.umjetinaID].trenutnaCijena : item.pocetnaCijena ?? 0)">
                @if (!string.IsNullOrEmpty(item.SlikaPath))
                {
                    <img src="@item.SlikaPath" class="card-img-top" style="height: 300px; object-fit: cover;" />
                }
                else
                {
                    <img src="~/images/placeholder.jpg" class="card-img-top" style="height: 300px; object-fit: cover;" />
                }

                <div class="card-body text-center">
                    <h5 class="card-title">"@item.naziv"</h5>
                    <p class="card-text">@item.autor</p>
                    @if (aukcije != null && aukcije.ContainsKey(item.umjetinaID))
                       {
                            var aukcija = aukcije[item.umjetinaID];
                                     if (  aukcija.status==Status.Aktivna)
                                         {
                                             <p class="card-text" style="font-weight: bold; color: black;">Highest bid: @aukcija.trenutnaCijena.ToString("F2") KM</p>




                                           } else if(aukcija.status==Status.Finalizirana
                                           )
                                                  {
                            <p class="card-text" style="font-weight: bold; color: black;">Highest bid was: @aukcija.trenutnaCijena.ToString("F2") KM</p>
                        }


                    }
                    
                         else
                        {
                            <p class="card-text" style="font-weight: bold; color: black;">Highest bid: Not yet available for bidding</p>
                        }
                    

              @if (aukcije != null && aukcije.ContainsKey(item.umjetinaID) && aukcije[item.umjetinaID].status == Status.Finalizirana)
{
    <button class="btn btn-strong-danger btn-sm mb-2" disabled>ZAVRŠENA</button>
}
else
{
    if (!User.IsInRole("Kriticar"))
    {
        <a asp-controller="Aukcija" asp-action="Bid" asp-route-id="@item.umjetinaID"
           class="btn btn-sm custom-bid-btn mb-2">BID</a>
    }
}

@if (!User.IsInRole("Kriticar"))
{
    <a asp-action="Details" asp-route-id="@item.umjetinaID"
       class="btn btn-link d-block mt-1">Detalji</a>
}
 @if (User.IsInRole("Kriticar") && 
    !(aukcije != null && aukcije.ContainsKey(item.umjetinaID) && aukcije[item.umjetinaID].status == Status.Finalizirana))
{
    if (item.pocetnaCijena != null && item.pocetnaCijena > 0)
    {
        <p class="text-success fw-bold mb-2">Početna cijena postavljena!</p>
    }
    else
    {
        <a asp-action="Edit" asp-route-id="@item.umjetinaID"
           class="btn btn-sm custom-postavi-btn mb-2">Postavi početnu cijenu</a>
    }
}


                </div>

                @if (User.IsInRole("Administrator"))
                {
                    <div class="card-footer text-center">
                        <a asp-action="Edit" asp-route-id="@item.umjetinaID">Edit</a> |
                        <a asp-action="Delete" asp-route-id="@item.umjetinaID">Delete</a>
                    </div>
                }
            </div>
        </div>
    }
</div>

<style>

    .overlay {
    position: fixed;
    display: none;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: rgba(0,0,0,0.5); /* zatamnjenje */
    z-index: 1049; /* odmah ispod sidebar-a (1050) */
}

    .sidebar {
    height: 100%;
    width: 0;
    position: fixed;
    z-index: 1050;
    top: 0;
    left: 0;
    background-color: #e6ccff;
    overflow-x: hidden;
    transition: 0.4s;
    padding-top: 60px;
}

.sidebar .closebtn {
    position: absolute;
    top: 10px;
    right: 20px;
    font-size: 30px;
    color: black;
    cursor: pointer;
}


    .filters-div{
        margin-left: 0px;
        margin-bottom:20px;
        margin-top:20px;
    }
    .card {
        border-radius: 12px;
        overflow: hidden;
    }

    .card-title {
        font-size: 18px;
        font-weight: bold;
    }

    .card-text {
        margin-bottom: 10px;
        font-size: 14px;
    }

    .custom-bid-btn {
        background-color: #e6ccff;
        color: black;
        border: 1px solid #d1b3ff;
        padding: 6px 16px;
        border-radius: 8px;
    }

        .custom-bid-btn:hover {
            background-color: #d5b3f5;
        }

    .custom-postavi-btn {
        background-color: #f3e8ff;
        color: black;
        border: 1px solid #dab6ff;
        padding: 6px 16px;
        border-radius: 8px;
    }

        .custom-postavi-btn:hover {
            background-color: #e6d7ff;
        }

    .btn-link {
        font-weight: 500;
        color: #5a33a2;
        text-decoration: none;
        font-size: 14px;
    }

        .btn-link:hover {
            text-decoration: underline;
            color: #3f1f7a;
        }
      


    .card-footer {
        font-size: 14px;
    }

    .btn-strong-danger {
    background-color: #ff0001 !important; /* prava jaka crvena */
    border-color: #cc0001 !important;
    color: white !important; /* crna slova */
    font-weight: bold;
}
</style>

@section Scripts {
    <script>
        function openSidebar() {
            document.getElementById("filterSidebar").style.width = "250px";
            document.getElementById("overlay").style.display = "block";
        }

        function closeSidebar() {
            document.getElementById("filterSidebar").style.width = "0";
            document.getElementById("overlay").style.display = "none";
        }
        function applyFilter() {
    const autorFilter = document.getElementById("autorFilter").value.toLowerCase();
    const minPrice = parseFloat(document.getElementById("minPrice").value) || 0;
    const maxPrice = parseFloat(document.getElementById("maxPrice").value) || Number.MAX_VALUE;

    const cards = document.querySelectorAll('.card.h-100');

    cards.forEach(card => {
        const autor = card.getAttribute('data-autor');
        const cijena = parseFloat(card.getAttribute('data-cijena'));

        const autorMatch = autor.includes(autorFilter);
        const cijenaMatch = cijena >= minPrice && cijena <= maxPrice;

        if (autorMatch && cijenaMatch) {
            card.parentElement.style.display = 'block';
        } else {
            card.parentElement.style.display = 'none';
        }
    });
}
    </script>
}
