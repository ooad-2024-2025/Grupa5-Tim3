@page
@model RegisterModel
@{
    ViewData["Title"] = "Registration";
}

<div class="d-flex justify-content-center align-items-center" style="min-height: 90vh;">
    <div class="p-5 shadow rounded" style="width: 600px; background-color: white;">
        <h2 class="text-center mb-4">Registration</h2>

        <form id="registerForm" asp-route-returnUrl="@Model.ReturnUrl" method="post">
            <div asp-validation-summary="ModelOnly" class="text-danger text-center mb-3" role="alert"></div>

            <div class="form-group mb-3">
                <label asp-for="Input.ime" class="form-label">First name</label>
                <input asp-for="Input.ime" class="form-control" placeholder="Insert first name"
                       pattern="^[A-Za-zČčĆćĐđŠšŽž\s-]+$"
                       title="Only letters, spaces and hyphens are allowed."
                       oninput="validateNameFields()" id="firstNameInput" />
                <span asp-validation-for="Input.ime" class="text-danger"></span>
                <span class="text-danger" id="imeError" style="display:none;"></span>
            </div>

            <div class="form-group mb-3">
                <label asp-for="Input.prezime" class="form-label">Last name</label>
                <input asp-for="Input.prezime" class="form-control" placeholder="Insert last name"
                       pattern="^[A-Za-zČčĆćĐđŠšŽž\s-]+$"
                       title="Only letters, spaces and hyphens are allowed."
                       oninput="validateNameFields()" id="lastNameInput" />
                <span asp-validation-for="Input.prezime" class="text-danger"></span>
                <span class="text-danger" id="prezimeError" style="display:none;"></span>
            </div>

            <div class="form-group mb-3">
                <input asp-for="Input.datumRodjenja"
                       type="date"
                       class="form-control"
                       id="birthDateInput"
                       max="@DateTime.Today.ToString("yyyy-MM-dd")"
                       oninput="validateBirthDate()" />
                <span asp-validation-for="Input.datumRodjenja" class="text-danger"></span>
                <span class="text-danger" id="birthDateError" style="display: none;"></span>

            </div>

            <div class="form-group mb-3">
                <label asp-for="Input.Email" class="form-label">Email</label>
                <input asp-for="Input.Email" class="form-control" autocomplete="username" />
                <span asp-validation-for="Input.Email" class="text-danger"></span>
            </div>

            <div class="form-group mb-3">
                <label asp-for="Input.Password" class="form-label">Password</label>
                <input asp-for="Input.Password"
                       class="form-control"
                       autocomplete="new-password"
                       id="passwordInput"
                       pattern="^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)(?=.*[\W_]).{8,}$"
                       title="Password must be at least 8 characters long, including an uppercase letter, lowercase letter, a number and a special character."
                       oninput="validateForm()" />

                <span asp-validation-for="Input.Password" class="text-danger"></span>

                <div id="passwordRequirements" class="mt-2 p-3 border rounded" style="background-color: #f8f9fa; font-size: 0.9em;">
                    <h6 class="mb-2 text-muted">Password requirements:</h6>
                    <ul class="list-unstyled mb-0">
                        <li id="length-req" class="requirement">
                            <i class="fas fa-times text-danger me-2"></i>
                            <span>At least 8 characters long</span>
                        </li>
                        <li id="lowercase-req" class="requirement">
                            <i class="fas fa-times text-danger me-2"></i>
                            <span>Contains lowercase letter (a-z)</span>
                        </li>
                        <li id="uppercase-req" class="requirement">
                            <i class="fas fa-times text-danger me-2"></i>
                            <span>Contains uppercase letter (A-Z)</span>
                        </li>
                        <li id="number-req" class="requirement">
                            <i class="fas fa-times text-danger me-2"></i>
                            <span>Contains number (0-9)</span>
                        </li>
                        <li id="special-req" class="requirement">
                            <i class="fas fa-times text-danger me-2"></i>
                            <span>Contains special character (!&#64;#$%^&amp;*)</span>
                        </li>
                    </ul>
                </div>
            </div>

            <div class="form-group mb-3">
                <label asp-for="Input.ConfirmPassword" class="form-label">Confirm password</label>
                <input asp-for="Input.ConfirmPassword" class="form-control" autocomplete="new-password"
                       id="confirmPasswordInput" oninput="validateForm()" />
                <span asp-validation-for="Input.ConfirmPassword" class="text-danger"></span>

                <div id="passwordMatch" class="mt-2" style="display: none;">
                    <div id="match-indicator" class="d-flex align-items-center">
                        <i id="match-icon" class="fas fa-times text-danger me-2"></i>
                        <span id="match-text">Passwords do not match</span>
                    </div>
                </div>
            </div>

            <button id="registerSubmit" type="submit" class="btn w-100" style="background-color: #d6b3ff; color: black; font-weight: bold;" disabled>
                REGISTER
            </button>
        </form>

        <div class="mt-4 text-center">
            <p>Already registered? <a asp-page="./Login">Log in</a></p>
        </div>
    </div>
</div>

@if (Model.ShowVerificationModal)
{
    <form method="post" asp-page-handler="Verify">
        <div class="modal show d-block" tabindex="-1" style="background-color: rgba(0, 0, 0, 0.5);">
            <div class="modal-dialog">
                <div class="modal-content rounded-3 shadow">
                    <div class="modal-header">
                        <h5 class="modal-title">Enter verification code</h5>
                        <button type="button" class="btn-close" aria-label="Close" onclick="window.location.href='@Url.Page("/Index")'"></button>
                    </div>
                    <div class="modal-body">
                        <input type="text" class="form-control" placeholder="Kod" name="VerificationCode" />
                    </div>
                    <div class="modal-footer">
                        <button type="submit" class="btn btn-primary">Submit</button>
                        <button type="button" class="btn btn-secondary" onclick="window.location.href='@Url.Page("/Index")'">Cancel</button>
                    </div>
                </div>
            </div>
        </div>
    </form>
}

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">

    <style>
        .requirement {
            transition: all 0.3s ease;
            padding: 2px 0;
        }

            .requirement i {
                transition: all 0.3s ease;
            }

        #passwordRequirements {
            transition: border-color 0.3s ease;
        }

        #passwordMatch {
            transition: all 0.3s ease;
        }

        #match-indicator {
            transition: all 0.3s ease;
            padding: 8px 12px;
            border-radius: 4px;
            font-size: 0.9em;
        }

        #registerSubmit:disabled {
            opacity: 0.6;
            cursor: not-allowed;
        }

        #registerSubmit:enabled {
            opacity: 1;
            cursor: pointer;
        }
    </style>

    <script>
            document.addEventListener("DOMContentLoaded", function () {
                const form = document.querySelector("form");
                const dateInput = document.querySelector("#Input_datumRodjenja");

                form.addEventListener("submit", function (e) {
                    const selectedDate = new Date(dateInput.value);
                    const today = new Date();

                    // Ukloni stare greške
                    let oldError = document.querySelector("#dateError");
                    if (oldError) oldError.remove();

                    if (selectedDate > today) {
                        e.preventDefault(); // Spriječi slanje forme

                        const error = document.createElement("span");
                        error.id = "dateError";
                        error.style.color = "red";
                        error.textContent = "Date of birth cannot be in the future.";

                        dateInput.parentElement.appendChild(error);
                    }
                });
            });

            function validateBirthDate() {
            const birthDateInput = document.getElementById("birthDateInput");
            const birthDateError = document.getElementById("birthDateError");
            const submitBtn = document.getElementById("registerSubmit");

            const selectedDate = new Date(birthDateInput.value);
            const today = new Date();
            today.setHours(0, 0, 0, 0); // ignoriraj vrijeme

            let isValid = true;

            if (birthDateInput.value && selectedDate > today) {
                birthDateError.textContent = "Date of birth cannot be in the future.";
                birthDateError.style.display = "block";
                isValid = false;
            } else {
                birthDateError.textContent = "";
                birthDateError.style.display = "none";
            }

            // Validacija ostalih polja
            const nameValid = validateNameFields();
            const passValid = validatePassword();
            const matchValid = validatePasswordMatch();

            // Dugme je aktivno samo ako sve važi
            submitBtn.disabled = !(isValid && nameValid && passValid && matchValid);

            return isValid;
        }

        // Pokreni validaciju pri promjeni datuma
        document.getElementById("birthDateInput").addEventListener("input", validateBirthDate);


        function validatePassword() {
            const password = document.getElementById("passwordInput").value;
            const requirements = {
                'length-req': password.length >= 8,
                'lowercase-req': /[a-z]/.test(password),
                'uppercase-req': /[A-Z]/.test(password),
                'number-req': /\d/.test(password),
                'special-req': /[\W_]/.test(password)
            };

            let allValid = true;

            Object.keys(requirements).forEach(reqId => {
                const element = document.getElementById(reqId);
                const icon = element.querySelector('i');

                if (requirements[reqId]) {
                    icon.className = 'fas fa-check text-success me-2';
                    element.style.color = '#198754';
                } else {
                    icon.className = 'fas fa-times text-danger me-2';
                    element.style.color = '#dc3545';
                    allValid = false;
                }
            });

            const requirementsBox = document.getElementById('passwordRequirements');
            if (allValid && password.length > 0) {
                requirementsBox.style.borderColor = '#198754';
                requirementsBox.style.backgroundColor = '#f0f9f0';
            } else if (password.length > 0) {
                requirementsBox.style.borderColor = '#dc3545';
                requirementsBox.style.backgroundColor = '#fdf2f2';
            } else {
                requirementsBox.style.borderColor = '#dee2e6';
                requirementsBox.style.backgroundColor = '#f8f9fa';
            }

            return allValid;
        }

        function validatePasswordMatch() {
            const password = document.getElementById("passwordInput").value;
            const confirmPassword = document.getElementById("confirmPasswordInput").value;
            const matchDiv = document.getElementById("passwordMatch");
            const matchIcon = document.getElementById("match-icon");
            const matchText = document.getElementById("match-text");
            const matchIndicator = document.getElementById("match-indicator");

            if (confirmPassword.length > 0) {
                matchDiv.style.display = 'block';

                if (password === confirmPassword && password.length > 0) {
                    matchIcon.className = 'fas fa-check text-success me-2';
                    matchText.textContent = 'Passwords match';
                    matchText.style.color = '#198754';
                    matchIndicator.style.backgroundColor = '#f0f9f0';
                    matchIndicator.style.border = '1px solid #198754';
                    return true;
                } else {
                    matchIcon.className = 'fas fa-times text-danger me-2';
                    matchText.textContent = 'Passwords do not match';
                    matchText.style.color = '#dc3545';
                    matchIndicator.style.backgroundColor = '#fdf2f2';
                    matchIndicator.style.border = '1px solid #dc3545';
                    return false;
                }
            } else {
                matchDiv.style.display = 'none';
                return false;
            }
        }

        function validateNameFields() {
            const firstName = document.getElementById("firstNameInput");
            const lastName = document.getElementById("lastNameInput");
            const submitBtn = document.getElementById("registerSubmit");

            const imeError = document.getElementById("imeError");
            const prezimeError = document.getElementById("prezimeError");

            const nameRegex = /^[A-Za-zČčĆćĐđŠšŽž\s-]+$/;

            let valid = true;

            // Validacija imena
            if (firstName.value.length > 0 && !nameRegex.test(firstName.value)) {
                imeError.textContent = "First name can only contain letters, spaces and hyphens.";
                imeError.style.display = "block";
                valid = false;
            } else {
                imeError.textContent = "";
                imeError.style.display = "none";
            }

            // Validacija prezimena
            if (lastName.value.length > 0 && !nameRegex.test(lastName.value)) {
                prezimeError.textContent = "Last name can only contain letters, spaces and hyphens.";
                prezimeError.style.display = "block";
                valid = false;
            } else {
                prezimeError.textContent = "";
                prezimeError.style.display = "none";
            }

            // Ponovno provjeri šifru i podudaranje
            const passwordValid = validatePassword();
            const matchValid = validatePasswordMatch();

            // Dugme je aktivno samo ako sve važi
            submitBtn.disabled = !(valid && passwordValid && matchValid);

            return valid;
        }

        function validateForm() {
            const passwordValid = validatePassword();
            const passwordsMatch = validatePasswordMatch();
            const nameRegex = /^[A-Za-zČčĆćĐđŠšŽž\s-]+$/;
            const firstName = document.getElementById("firstNameInput").value;
            const lastName = document.getElementById("lastNameInput").value;

            const validNames = nameRegex.test(firstName) && nameRegex.test(lastName);

            document.getElementById("registerSubmit").disabled = !(passwordValid && passwordsMatch && validNames);
        }

        document.addEventListener("DOMContentLoaded", function () {
            validateForm();
        });
    </script>
}
